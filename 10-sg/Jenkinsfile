pipeline {
    agent {
        label 'AGENT-1'
    }

    environment {
        appVersion = ''
        REGION     = "us-east-1"
        ACC_ID     = "090074823871"
        PROJECT    = "roboshop"
        COMPONENT  = "catalogue"
    }

    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    /*
    parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    */

    stages {
        stage('Build') {
            steps {
                script {
                    withAWS(credentials: 'aws-cred', region: 'us-east-1') {
                        sh '''
                            cd 10-sg
                            terraform init -reconfigure
                        '''
                    }
                }
            }
        }

        stage('Plan') {
            steps {
                script {
                    withAWS(credentials: 'aws-cred', region: 'us-east-1') {
                        sh '''
                            cd 10-sg
                            terraform plan
                        '''
                    }
                }
            }
        }

        stage('Apply') {
            steps {
                script {
                    withAWS(credentials: 'aws-cred', region: 'us-east-1') {
                        sh '''
                            cd 10-sg
                            terraform apply -auto-approve
                        '''
                    }
                }
            }
        }    
        stage(' Bastion ACM EKS') {
            // PARALLEL EXECUTION
            parallel{
                stage('Trigger bastion') {
                    steps {
                        script {
                            build job: '20-bastion',
                            propagate: false,  // Even if SG fails, VPC will not be affected
                            wait: false       // VPC will not wait for SG pipeline completion

                        }
                    }
                }
/*                 stage('Trigger EKS') {
                    steps {
                        script {
                            build job: '80-eks',
                            wait: false,       // VPC will not wait for SG pipeline completion
                            propagate: false   // Even if SG fails, VPC will not be affected
                        }
                    }
                } */
                stage('Trigger acm') {
                    steps {
                        script {
                            build job: '60--acm',
                            propagate: false,  // Even if SG fails, VPC will not be affected
                            wait: false       // VPC will not wait for SG pipeline completion
                        }
                    }
                }
            }
        }
        // Sequential
        stage('Trigger acm') {
            steps {
                script {
                    build job: '70-frontend_alb',
                    propagate: false,  // Even if SG fails, VPC will not be affected
                    wait: false       // VPC will not wait for SG pipeline completion
                }
            }
        }

    }

    post {
        always {
            echo 'I will always say Hello again!'
            deleteDir()
        }
        success {
            echo 'Hello success'
        }
        failure {
            echo 'Hello failure'
        }
    }
}