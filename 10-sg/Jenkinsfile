pipeline {
    agent  {
        label 'AGENT-1'
    }
    environment { 
        appVersion = ''
        REGION = "us-east-1"
        ACC_ID = "090074823871"
        PROJECT = "roboshop"
        COMPONENT = "catalogue"
    }
    options {
        timeout(time: 30, unit: 'MINUTES') 
        disableConcurrentBuilds()
        ansiColor('xterm') 
    }
/*     parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password') 
    } */

    // build
    stages {
        stage('Build') {
            steps {
                script {
                    withAWS(credentials: 'aws-cred', region: 'us-east-1') {
                        sh """
                            cd 10-sg
                            terraform init -reconfigure
  
                        """
                    }
                }
            }
        }
        stage('plan') {
            steps {
                script {
                    withAWS(credentials: 'aws-cred', region: 'us-east-1') {
                        sh """
                            cd 10-sg
                            terraform plan
  
                        """
                    }
                }
            }
        }
        stage('apply') {
            input {
                message "Should we continue?"
                ok "Yes, we should."
                submitter "alice,bob"
            }            
            steps {
                script {
                    withAWS(credentials: 'aws-cred', region: 'us-east-1') {
                        sh """
                            cd 10-sg
                            terraform apply -auto-approve
  
                        """
                    }
                }
            }
        }   
    }

    post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }
        success {
            echo 'hello sucess'
        }
        failure {
            echo "hello failure"
        }
    }
}

